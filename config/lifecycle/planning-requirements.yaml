metadata:
  name: planning-requirements-phase
  version: 1.0.0
  description: "Planning & Requirements phase configuration for HUGAI development lifecycle"
  category: lifecycle-phase
  phase_order: 1
  dependencies:
    - prompt-refiner-agent
    - requirements-analyzer-agent
    - router-agent
    - domain-expert-agent
  tags:
    - planning
    - requirements
    - user-stories
    - scope-definition
    - stakeholder-management

configuration:
  # Phase Overview
  phase_definition:
    name: "Planning & Requirements"
    objective: "Establish solid foundation by capturing, refining, and validating requirements through AI-driven analysis and human governance"
    duration_estimate: "2-4 weeks"
    complexity_factors: [stakeholder_count, domain_complexity, compliance_requirements, technical_constraints]
  
  # Phase Objectives
  objectives:
    requirement_elicitation:
      description: "Accurately elicit stakeholder needs and translate them into actionable user stories"
      success_criteria: 
        - "All key stakeholder needs captured"
        - "User stories follow INVEST criteria"
        - "Acceptance criteria clearly defined"
      
    scope_definition:
      description: "Decompose high-level features into granular work items with clear boundaries"
      success_criteria:
        - "Work breakdown structure complete"
        - "Scope boundaries clearly defined"
        - "Dependencies identified and mapped"
      
    effort_estimation:
      description: "Provide data-driven effort estimates with confidence intervals"
      success_criteria:
        - "Story points assigned to all items"
        - "Confidence intervals calculated"
        - "Risk factors identified and quantified"
      
    compliance_assessment:
      description: "Identify compliance, security, and ethical constraints early"
      success_criteria:
        - "Regulatory requirements identified"
        - "Security constraints documented"
        - "Ethical considerations assessed"
  
  # AI Agent Configuration
  ai_agents:
    prompt_refiner_agent:
      role: "Primary prompt optimization and standardization"
      responsibilities:
        - "Refine stakeholder inputs into clear, unambiguous prompts"
        - "Apply HUGAI prompt templates and standards"
        - "Ensure consistency across requirement analysis"
      inputs: ["stakeholder_interviews", "business_requirement_docs", "domain_context"]
      outputs: ["refined_planning_prompts", "standardized_requirement_inputs"]
      
    requirements_analyzer_agent:
      role: "Core requirements extraction and analysis"
      responsibilities:
        - "Extract user stories from documentation and interviews"
        - "Generate detailed acceptance criteria"
        - "Identify edge cases and dependencies"
        - "Create work breakdown structure"
      inputs: ["refined_prompts", "business_requirements", "compliance_guidelines"]
      outputs: ["user_story_backlog", "acceptance_criteria", "task_decomposition"]
      
    router_agent:
      role: "Task orchestration and workflow management"
      responsibilities:
        - "Route requirements artifacts to appropriate agents"
        - "Coordinate between AI agents and human reviewers"
        - "Manage task dependencies and sequencing"
      inputs: ["workflow_definitions", "agent_capabilities", "task_metadata"]
      outputs: ["routing_decisions", "workflow_status", "escalation_triggers"]
      
    domain_expert_agent:
      role: "Domain knowledge validation and enrichment"
      responsibilities:
        - "Validate requirements against domain best practices"
        - "Enrich requirements with domain-specific context"
        - "Identify missing domain considerations"
      inputs: ["user_stories", "domain_knowledge_base", "industry_standards"]
      outputs: ["validated_requirements", "domain_recommendations", "knowledge_gaps"]
  
  # Human Participants
  human_participants:
    product_owner:
      role: "Requirements validation and prioritization"
      responsibilities:
        - "Validate AI-generated user stories and acceptance criteria"
        - "Prioritize backlog items based on business value"
        - "Approve final requirements specification"
      checkpoints: ["kickoff_review", "scope_baseline_signoff"]
      
    business_analyst:
      role: "Requirements refinement and stakeholder liaison"
      responsibilities:
        - "Facilitate stakeholder interviews and workshops"
        - "Refine and clarify requirements with domain experts"
        - "Ensure requirements traceability and completeness"
      checkpoints: ["requirement_completeness_review"]
      
    stakeholders:
      role: "Domain context and requirement validation"
      responsibilities:
        - "Provide domain context and business rules"
        - "Validate AI-generated requirements against real needs"
        - "Approve deliverables and scope decisions"
      checkpoints: ["stakeholder_validation", "final_approval"]
      
    compliance_officer:
      role: "Regulatory and compliance validation"
      responsibilities:
        - "Review requirements for regulatory compliance"
        - "Identify security and privacy constraints"
        - "Validate ethical considerations and guidelines"
      checkpoints: ["compliance_gate"]
  
  # Key Artifacts & Deliverables
  artifacts:
    validated_user_story_backlog:
      description: "Comprehensive user story backlog with detailed acceptance criteria"
      format: "yaml"
      template: "templates/user_story_backlog.yaml"
      quality_criteria:
        - "All stories follow INVEST principles"
        - "Acceptance criteria are testable and clear"
        - "Edge cases and error scenarios included"
      
    work_breakdown_structure:
      description: "Hierarchical decomposition of work items and tasks"
      format: "yaml"
      template: "templates/wbs.yaml"
      quality_criteria:
        - "Tasks are appropriately sized (1-8 hours)"
        - "Dependencies clearly identified"
        - "Critical path analysis included"
      
    effort_estimation_report:
      description: "Data-driven effort estimates with confidence intervals"
      format: "json"
      template: "templates/effort_estimation.json"
      quality_criteria:
        - "Story points based on historical data"
        - "Confidence intervals calculated statistically"
        - "Risk factors quantified and documented"
      
    compliance_assessment_matrix:
      description: "Initial risk and compliance assessment"
      format: "yaml"
      template: "templates/compliance_matrix.yaml"
      quality_criteria:
        - "All regulatory requirements identified"
        - "Risk levels assessed and documented"
        - "Mitigation strategies proposed"
      
    audit_trail:
      description: "Complete log of AI suggestions and human decisions"
      format: "json"
      storage: "audit_database"
      retention: "7 years"
  
  # Governance Checkpoints
  governance_checkpoints:
    kickoff_review:
      type: "human_checkpoint"
      description: "Review and approve AI-generated user stories and estimates"
      participants: ["product_owner", "business_analyst", "key_stakeholders"]
      entry_criteria:
        - "Initial user story backlog generated"
        - "Effort estimates calculated"
        - "Compliance assessment completed"
      exit_criteria:
        - "User stories approved by product owner"
        - "Estimates accepted by stakeholders"
        - "Scope boundaries agreed upon"
      duration: "2 hours"
      
    scope_baseline_signoff:
      type: "human_checkpoint"
      description: "Formal approval of project scope, priorities, and constraints"
      participants: ["product_owner", "project_sponsor", "compliance_officer"]
      entry_criteria:
        - "Kickoff review completed successfully"
        - "All major stakeholders consulted"
        - "Risk assessment finalized"
      exit_criteria:
        - "Project scope formally approved"
        - "Budget and timeline accepted"
        - "Success criteria defined and agreed"
      duration: "1 hour"
      
    compliance_gate:
      type: "automated_gate"
      description: "Verification of regulatory and security requirements"
      validation_rules:
        - "All regulatory requirements identified and documented"
        - "Security requirements mapped to technical constraints"
        - "Privacy impact assessment completed if required"
      blocking_conditions:
        - "Critical compliance requirements missing"
        - "High-risk items without mitigation"
        - "Regulatory approval pending for critical features"
  
  # Metrics & Quality Gates
  metrics:
    story_accuracy_rate:
      description: "Percentage of AI-generated stories accepted without modification"
      target: ">80%"
      calculation: "approved_stories / total_generated_stories * 100"
      alert_threshold: "<60%"
      
    estimation_variance:
      description: "Difference between estimated and actual effort"
      target: "<20%"
      calculation: "abs(actual_effort - estimated_effort) / estimated_effort * 100"
      tracking: "post_implementation"
      
    requirement_completeness:
      description: "Ratio of identified requirements to total scoped features"
      target: ">95%"
      calculation: "documented_requirements / total_scope_items * 100"
      alert_threshold: "<85%"
      
    change_request_frequency:
      description: "Number of requirement revisions after sign-off"
      target: "<10%"
      calculation: "change_requests / total_requirements * 100"
      tracking: "throughout_project"
      
    governance_compliance_rate:
      description: "Percentage of mandatory checkpoints passed on time"
      target: "100%"
      calculation: "completed_checkpoints / total_checkpoints * 100"
      alert_threshold: "<100%"
  
  # Quality Gates
  quality_gates:
    story_quality_gate:
      type: "automated"
      validation_rules:
        - "All stories have clear acceptance criteria"
        - "Stories follow INVEST principles"
        - "Edge cases identified for complex stories"
      blocking_threshold: "<90% compliance"
      
    estimation_quality_gate:
      type: "automated"
      validation_rules:
        - "All stories have effort estimates"
        - "Confidence intervals calculated"
        - "Historical data used for calibration"
      blocking_threshold: "<95% coverage"
      
    completeness_gate:
      type: "human_validated"
      validation_rules:
        - "All stakeholder needs captured"
        - "Non-functional requirements identified"
        - "Compliance requirements documented"
      approver: "product_owner"

integration:
  # Tool Integrations
  tools:
    requirements_management:
      jira:
        api_endpoint: "${JIRA_API_URL}"
        project_key: "${JIRA_PROJECT_KEY}"
        issue_types: ["Epic", "Story", "Task"]
        custom_fields: ["acceptance_criteria", "story_points", "compliance_flags"]
        
      azure_devops:
        organization: "${AZURE_DEVOPS_ORG}"
        project: "${AZURE_DEVOPS_PROJECT}"
        work_item_types: ["Epic", "User Story", "Task"]
        
    collaboration_platforms:
      slack:
        workspace: "${SLACK_WORKSPACE}"
        channels: ["#requirements", "#stakeholder-updates"]
        notifications: ["checkpoint_approvals", "story_updates"]
        
      confluence:
        space_key: "REQ"
        page_templates: ["requirements_spec", "stakeholder_interview"]
        
    ai_model_registry:
      mlflow:
        tracking_uri: "${MLFLOW_TRACKING_URI}"
        experiment_name: "requirements_analysis"
        model_versioning: true
        
    audit_logging:
      elasticsearch:
        index: "hugai_requirements_audit"
        retention: "7_years"
        
  # Workflow Integration
  workflow_triggers:
    phase_start:
      - "initialize_agents"
      - "load_project_context"
      - "notify_stakeholders"
      
    artifact_generation:
      - "run_requirements_analysis"
      - "generate_user_stories"
      - "calculate_estimates"
      
    checkpoint_preparation:
      - "validate_artifacts"
      - "prepare_review_materials"
      - "schedule_checkpoint_meetings"

validation:
  # Input Validation
  input_validation:
    stakeholder_inputs:
      format_validation: "text_or_structured"
      completeness_check: "mandatory_fields_present"
      quality_assessment: "clarity_and_specificity"
      
    business_requirements:
      format_compliance: "template_adherence"
      content_validation: "business_value_clear"
      traceability: "source_documentation"
      
    domain_context:
      accuracy_validation: "domain_expert_review"
      currency_check: "information_freshness"
      completeness_assessment: "coverage_analysis"
  
  # Process Validation
  process_validation:
    agent_coordination:
      task_routing: "correct_agent_selection"
      dependency_management: "proper_sequencing"
      error_handling: "graceful_degradation"
      
    human_checkpoint_execution:
      participant_availability: "scheduled_and_confirmed"
      material_preparation: "documents_ready"
      decision_documentation: "outcomes_recorded"
  
  # Output Validation
  output_validation:
    artifact_quality:
      format_compliance: "template_adherence"
      content_completeness: "all_sections_populated"
      internal_consistency: "no_contradictions"
      
    governance_compliance:
      checkpoint_completion: "all_required_approvals"
      audit_trail_completeness: "full_traceability"
      decision_rationale: "documented_reasoning"

examples:
  # E-commerce Platform Requirements
  ecommerce_example:
    project: "Online Marketplace Platform"
    stakeholders: ["product_manager", "ux_designer", "compliance_officer", "security_engineer"]
    
    input_artifacts:
      business_requirements: |
        # E-commerce Platform Requirements
        
        ## Business Objectives
        - Create online marketplace for small businesses
        - Support 10,000+ concurrent users
        - Process payments securely
        - Comply with PCI-DSS and GDPR
        
        ## Key Features
        - User registration and authentication
        - Product catalog with search
        - Shopping cart and checkout
        - Payment processing
        - Order management
        - Seller dashboard
        
    output_artifacts:
      user_stories:
        - id: "US-001"
          title: "User Registration"
          description: "As a customer, I want to create an account so that I can save my preferences and track orders"
          acceptance_criteria:
            - "User can register with email and password"
            - "Email verification required before account activation"
            - "Password meets security requirements (8+ chars, mixed case, numbers)"
            - "User receives welcome email after successful registration"
          story_points: 5
          dependencies: []
          
        - id: "US-002"
          title: "Product Search"
          description: "As a customer, I want to search for products so that I can find items I'm interested in"
          acceptance_criteria:
            - "Search returns relevant results based on keywords"
            - "Results can be filtered by category, price, rating"
            - "Search handles typos and suggests corrections"
            - "Results are paginated with max 20 items per page"
          story_points: 8
          dependencies: ["US-003"]
          
      effort_estimation:
        total_story_points: 134
        confidence_interval: "±15%"
        estimated_duration: "12-16 weeks"
        risk_factors:
          - "PCI-DSS compliance requirements may extend timeline"
          - "Third-party payment integration complexity"
          - "Performance requirements may require architecture changes"
  
  # Healthcare Application Requirements
  healthcare_example:
    project: "Patient Management System"
    compliance_frameworks: ["HIPAA", "FDA_510k"]
    
    compliance_assessment:
      hipaa_requirements:
        - "Patient data encryption at rest and in transit"
        - "Access controls and audit logging"
        - "Business Associate Agreements with vendors"
        - "Data breach notification procedures"
        
      fda_requirements:
        - "Software as Medical Device (SaMD) classification"
        - "Clinical validation and testing"
        - "Quality management system compliance"
        - "Post-market surveillance plan"
        
    risk_matrix:
      high_risk_items:
        - item: "Patient data security"
          probability: "medium"
          impact: "critical"
          mitigation: "Implement end-to-end encryption and access controls"
          
      medium_risk_items:
        - item: "FDA approval timeline"
          probability: "high"
          impact: "medium"
          mitigation: "Early engagement with FDA and regulatory consultants"

# CLI Usage Examples
cli_usage: |
  # Initialize planning phase
  hugai lifecycle start planning-requirements --project ecommerce-platform
  
  # Run requirements analysis
  hugai requirements analyze --input stakeholder-interviews/ --output user-stories.yaml
  
  # Generate effort estimates
  hugai estimate effort --stories user-stories.yaml --historical-data velocity.json
  
  # Execute governance checkpoint
  hugai checkpoint run kickoff-review --participants product-owner,stakeholders
  
  # Validate phase completion
  hugai lifecycle validate planning-requirements --check-gates --generate-report
  
  # Export artifacts
  hugai artifacts export --phase planning-requirements --format confluence,jira